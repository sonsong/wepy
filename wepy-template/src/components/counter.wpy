<template>
  <view class="counter-wrap">
    <text>counter组件:</text>
    <button @tap="plus" size="mini">  +  </button>
    <text class="counter_count" :class="{counter_red: num > 0, counter_green: num < 1}"> {{num}} </text>
    <button @tap="minus" size="mini">  -  </button>
    <view>计算属性:{{doubleNum}}</view>
  </view>
</template>
<script>
    import wepy from 'wepy';

    export default class Counter extends wepy.component {
        //子组件接收父组件传过的参数，twoWay 属性默认为false,即，子组件该参数的改变并不会影响父组件的值
        //twoWay = true,后，子组件将会影响父组件，当父组件传参时加了.sync修饰时，父子组件将形成双向数据绑定了
        props = {
            num:{
                type: Number,
                default: 0,
                twoWay: true
            }
        }

        events = {
        }

        computed = {
            doubleNum(){
                return this.num * 2;
            }
        }

        watch = {
            num(newVal){
                console.log(`我变成了${newVal}`);
            }
        }

        methods = {
            plus () {
                this.num++;
            },
            minus () {
                this.num--;
            }
        }
    }
</script>
<style lang="less" scoped> 
    .counter-wrap{
        .counter_count{
            height: 30px;
            line-height: 30px;
            font-size: 14px;
        }
        .counter_red{
            color:red;
        }
        .counter_green{
            color:green;
        }
    }
</style>